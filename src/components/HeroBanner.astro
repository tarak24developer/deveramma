---
const { title, subtitle, image, overlay = true } = Astro.props;

const hasSlot = Astro.slots.has('default');
---

<section class={`hero-banner ${overlay ? 'with-overlay' : ''}`} style={`background-image: url(${image})`}>
  <div class="container">
    <div class="hero-content">
      {title && <h1 class="hero-title">{title}</h1>}
      {subtitle && <p class="hero-subtitle">{subtitle}</p>}
      
      {hasSlot && (
        <div class="hero-cta">
          <slot />
        </div>
      )}
    </div>
  </div>
</section>

<style>
  .hero-banner {
    position: relative;
    background-size: cover;
    background-position: center;
    color: white;
    padding: 8rem 0;
    text-align: center;
    min-height: 70vh;
    display: flex;
    align-items: center;
  }
  
  .with-overlay::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: linear-gradient(rgba(0, 0, 0, 0.4), rgba(0, 0, 0, 0.6));
    z-index: 1;
  }
  
  .container {
    position: relative;
    z-index: 2;
    width: 100%;
    max-width: 1200px;
    margin: 0 auto;
    padding: 0 1rem;
  }
  
  .hero-content {
    max-width: 800px;
    margin: 0 auto;
  }
  
  .hero-title {
    font-size: 3.5rem;
    margin-bottom: 1rem;
    font-weight: 700;
    text-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);
  }
  
  .hero-subtitle {
    font-size: 1.5rem;
    margin-bottom: 2rem;
    text-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);
    opacity: 0.9;
  }
  
  .hero-cta {
    margin-top: 2rem;
  }
  
  @media (max-width: 768px) {
    .hero-banner {
      padding: 6rem 0;
      min-height: 60vh;
    }
    
    .hero-title {
      font-size: 2.5rem;
    }
    
    .hero-subtitle {
      font-size: 1.25rem;
    }
  }
</style>