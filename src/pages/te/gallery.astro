---
import MainLayout from '../../layouts/MainLayout.astro';
import HeroBanner from '../../components/HeroBanner.astro';
import { SITE, CLOUDINARY } from '../../config';
import { getLangFromUrl, useTranslations } from '../../i18n/utils';
import * as cloudinaryUtils from '../../utils/cloudinary';

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);

const pageTitle = "గ్యాలరీ";
const { cloudName } = CLOUDINARY;
const htmlLang = "te";

// Local gallery images as fallback
const localImages = [
  { src: "/images/temple/temple-inside.jpg", alt: "దేవాలయం లోపలి వీక్షణ", title: "దేవాలయం లోపలి భాగం" },
  { src: "/images/pooja/special-pooja.jpg", alt: "ప్రత్యేక పూజ", title: "ప్రత్యేక పూజ" },
  { src: "/images/pooja/weekly-pooja.jpg", alt: "వారపు పూజలు", title: "వారపు పూజలు" }
];
---

<MainLayout title={pageTitle} description="దేవరమ్మ దేవాలయం యొక్క ఫోటోలను చూడండి, దేవాలయ నిర్మాణం, దేవతలు మరియు ప్రత్యేక కార్యక్రమాల చిత్రాలతో సహా" lang={htmlLang}>
  <HeroBanner 
    title={t('gallery.title')}
    image="/images/temple/temple-inside.jpg"
  />
  
  <section class="page-content">
    <div class="container">      <div class="gallery-intro">
        <h2>దేవాలయ ఫోటో గ్యాలరీ</h2>
        <p>దేవరమ్మ దేవాలయం యొక్క అందం మరియు దైవత్వాన్ని ప్రదర్శించే మా ఫోటోల సేకరణను అన్వేషించండి.</p>
        <p class="gallery-note"><em>Note: For administrators - all images in this gallery should be uploaded to Cloudinary in the "devaramma" folder.</em></p>
      </div>
      
      <div id="my-gallery" class="cloudinary-gallery"></div>
      
      <!-- Fallback gallery with local images -->
      <div id="local-gallery" class="local-gallery" style="display:none;">
        <h3>దేవాలయ చిత్రాలు</h3>
        <p class="gallery-fallback-note">స్థానిక దేవాలయ చిత్రాలను వీక్షిస్తోంది</p>
        
        <div class="image-grid">
          {localImages.map(img => (
            <div class="image-card">
              <img src={img.src} alt={img.alt} />
              <div class="image-caption">{img.title}</div>
            </div>
          ))}
        </div>
      </div>
    </div>
  </section>
</MainLayout>

<script is:inline src="https://media-library.cloudinary.com/global/all.js"></script>

<script define:vars={{ cloudName }}>  document.addEventListener('DOMContentLoaded', function() {
    console.log("Initializing Cloudinary gallery with cloud name:", cloudName);
    
    const myGallery = cloudinary.galleryWidget({
      container: "#my-gallery",
      cloudName: cloudName,
      mediaAssets: [
        { prefix: "devaramma/" } // Display all images from the 'devaramma' folder
      ],
      carouselStyle: "indicators",
      displayProps: {
        mode: "grid",
        columns: 3
      },
      zoomProps: {
        trigger: "click"
      },
      imageBreakpoint: 300,
      thumbnailProps: {
        width: 300,
        height: 225, // 4:3 aspect ratio
        crop: "fill",
        gravity: "auto"
      }    });
      
    try {
      myGallery.render();
      
      // Check if gallery loaded properly after a delay
      setTimeout(function() {
        const galleryItems = document.querySelectorAll('#my-gallery .gallery_item, #my-gallery img');
        console.log("Found gallery items:", galleryItems.length);
        
        if (galleryItems.length === 0) {
          console.log("No images found in Cloudinary gallery, showing fallback");
          document.getElementById('local-gallery').style.display = 'block';
        }
      }, 3000);
    } catch (error) {
      console.error("Error initializing Cloudinary gallery:", error);
      document.getElementById('local-gallery').style.display = 'block';
    }
    
    // Admin mode toggle (press Alt+A to toggle admin notes)
    document.addEventListener('keydown', function(e) {
      if (e.altKey && e.key === 'a') {
        document.body.classList.toggle('admin-mode');
      }
    });
  });
</script>

<style>  .gallery-intro {
    text-align: center;
    margin-bottom: 2rem;
  }
  
  .gallery-intro h2 {
    color: var(--primary-color);
    margin-bottom: 0.5rem;
  }
  
  .gallery-note {
    font-size: 0.85rem;
    color: #666;
    margin-top: 1rem;
    display: none; /* Hidden by default, visible only in admin mode */
  }
  
  body.admin-mode .gallery-note {
    display: block;
  }
  
  .cloudinary-gallery {
    margin: 0 auto;
    max-width: 100%;
  }
  
  /* Responsive styling for the gallery */
  @media (max-width: 768px) {
    :global(.cloudinary-gallery) :global(.grid-gallery) {
      grid-template-columns: repeat(2, 1fr) !important;
    }
  }
  
  @media (max-width: 480px) {
    :global(.cloudinary-gallery) :global(.grid-gallery) {
      grid-template-columns: 1fr !important;
    }
  }
  
  /* Local fallback gallery styling */
  .local-gallery {
    margin-top: 2rem;
    text-align: center;
  }
  
  .gallery-fallback-note {
    font-size: 0.9rem;
    color: #666;
    margin-bottom: 1.5rem;
    font-style: italic;
  }
  
  .image-grid {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    gap: 1.5rem;
    margin-top: 1rem;
  }
  
  .image-card {
    border-radius: 8px;
    overflow: hidden;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    transition: transform 0.3s ease;
  }
  
  .image-card:hover {
    transform: translateY(-5px);
  }
  
  .image-card img {
    width: 100%;
    height: 225px;
    object-fit: cover;
    display: block;
  }
  
  .image-caption {
    padding: 0.75rem;
    background-color: var(--light-bg);
    font-size: 0.9rem;
  }
  
  @media (max-width: 768px) {
    .image-grid {
      grid-template-columns: repeat(2, 1fr);
    }
  }
  
  @media (max-width: 480px) {
    .image-grid {
      grid-template-columns: 1fr;
    }
  }
</style>
